<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>body{
        padding: 0px;
         margin: 0px;
        background-color: rgba(0, 0, 0, 0.703);}
        .calculator-grid{
            display: grid;
            justify-content: center;
            align-content: center;
            min-height: 100vh;
            grid-template-columns: repeat(4,100px);
            grid-template-rows: minmax(120px,auto) repeat(5,100px);
        } .calculator-grid button{
            cursor: pointer;
            font-size: 2rem;
            background-color: rgba(0, 0, 0, 0.599);
            color: chartreuse;
            border-radius: 10px;
        }.calculator-grid button:hover{
            background-color: black;
        }
        .span-two{
            grid-column: span 2;
        }.output{
            grid-column: 1/-1;
            background-color: rgba(0, 0, 0, 0.834);
            color: greenyellow;
            display: flex;
            align-items: flex-end;
            flex-direction: column;
            justify-content: space-around;
            padding: 10px;
            border-radius: 10px;
        }.output .previous-operand{
            color: greenyellow;
            font-size: 1.5rem;
        }.output .current-operand{
            color:lawngreen;
            font-size: 1.5rem;
        }
    </style>
</head>
<body>
    <div class="calculator-grid">
        <div class="output">
            <div data-previous-operand class="previous-operand"></div>
                <div data-current-operand class="current-operand"></div>
        </div>
        <button data-all-clear class="span-two">AC</button>
        <button data-delete>DEL</button>
        <button data-operation>/</button>
        <button data-number>1</button>
        <button data-number>2</button>
        <button data-number>3</button>
        <button data-operation>*</button>
        <button data-number>4</button>
        <button data-number>5</button>
        <button data-number>6</button>
        <button data-operation>-</button>
        <button data-number>7</button>
        <button data-number>8</button>
        <button data-number>9</button>
        <button data-operation>+</button>
        <button data-number>.</button>
        <button data-number>0</button>
        <button data-equals class="span-two">=</button>
    </div>
    <script>
        class Calculator{
            constructor(previousOperandTextElement,currentOperandTextElement){
                this.previousOperandTextElement=previousOperandTextElement
                this.currentOperandTextElement=currentOperandTextElement
                this.clear()
            }
            clear(){
                this.currentOperand=""
                this.previousOperand=""
                this.operation=undefined
            }
            delete(){

            }
            appendNumber(number){
                if(number==="."&&this.currentOperand.includes("."))return
                this.currentOperand=this.currentOperand.toString()+number.toString()
            }
            chooseOperation(operation){
                if(this.currentOperand==="")return
                if(this.previousOperand!==""){
                    this.compute
                }
                this.operation=operation
                this.previousOperand=this.currentOperand
                this.currentOperand=""
            }
            compute(){
                let computation
                const prev=parseFloat(this.previousOperand)
                const current=parseFloat(this.currentOperand)
                if(isNaN(prev)||isNaN(current))return
                switch(this.operation){
                    case "+":
                        computation=prev+current
                        break
                        case "-":
                        computation=prev-current
                        break
                        case "*":
                        computation=prev*current
                        break
                        case "/":
                        computation=prev/current
                        break
                        default:
                        return
                }
                this.currentOperand=computation
                this.operation=undefined
                this.previousOperand=""
            }
            updateDisplay() {
    this.currentOperandTextElement.innerText = this.currentOperand;
    this.previousOperandTextElement.innerText = this.previousOperand;
}
        }
        const numberButtons = document.querySelectorAll("[data-number]")
        const operationButtons = document.querySelectorAll("[data-operation]")
        const equalsButton = document.querySelector("[data-equals]")
        const allClearButton = document.querySelector("[data-all-clear]")
        const deleteButton = document.querySelector("[data-delete]")
        const previousOperandTextElement = document.querySelector("[data-previous-operand]")
        const currentOperandTextElement = document.querySelector("[data-current-operand]")

        const calculator = new Calculator(previousOperandTextElement,currentOperandTextElement)
        numberButtons.forEach(button=>{button.addEventListener("click",()=>{
            calculator.appendNumber(button.innerText)
            calculator.updateDisplay()
        })})
        operationButtons.forEach(button=>{button.addEventListener("click",()=>{
            calculator.chooseOperation(button.innerText)
            calculator.updateDisplay()
        })})
        equalsButton.addEventListener("click",button=>{
            calculator.compute()
            calculator.updateDisplay()
        })
        allClearButton.addEventListener("click",button=>{
            calculator.clear()
            calculator.updateDisplay()
        })
    </script>
</body>
</html>